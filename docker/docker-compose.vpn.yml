services:
  metahkg-nginx:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-nginx
    image: metahkg${COMPOSE_PROJECT_NAME}/nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    tty: true
    restart: always
    environment:
      METAHKG_LINKS_NAME: localhost
      METAHKG_SERVER_NAME: localhost
      METAHKG_WEB_NAME: localhost
      METAHKG_IMAGES_NAME: localhost
      METAHKG_RLP_PROXY_NAME: localhost
      domain: ${domain}
      LINKS_DOMAIN: ${LINKS_DOMAIN}
      IMAGES_DOMAIN: ${IMAGES_DOMAIN}
      RLP_PROXY_DOMAIN: ${RLP_PROXY_DOMAIN}
    depends_on:
      - metahkg-server
      - metahkg-web
      - metahkg-links
      - metahkg-images
      - metahkg-rlp-proxy
      - metahkg-protonvpn
    network_mode: service:metahkg-protonvpn
  metahkg-web:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-web
    image: registry.gitlab.com/metahkg/metahkg-web/${branch:-master}:${version:-latest}
    build:
      context: ../metahkg-web
      dockerfile: ./Dockerfile
      args:
        REACT_APP_recaptchasitekey: ${REACT_APP_recaptchasitekey}
        REACT_APP_IMAGES_DOMAIN: ${IMAGES_DOMAIN}
        REACT_APP_RLP_PROXY_DOMAIN: ${RLP_PROXY_DOMAIN}
        REACT_APP_build: ${REACT_APP_build}
        REACT_APP_version: ${REACT_APP_version}
        REACT_APP_VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
        env: ${env}
    tty: true
    restart: always
    environment:
      PORT: 3002
      env: ${env}
      REACT_APP_recaptchasitekey: ${REACT_APP_recaptchasitekey}
      REACT_APP_IMAGES_DOMAIN: ${IMAGES_DOMAIN}
      REACT_APP_RLP_PROXY_DOMAIN: ${RLP_PROXY_DOMAIN}
      REACT_APP_VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      GCM_SENDER_ID: ${GCM_SENDER_ID}
    volumes:
      - ../metahkg-web/src:/home/user/src
      - ../metahkg-web/tailwind.config.js:/home/user/tailwind.config.js
      - ../metahkg-web/public:/home/user/public
    depends_on:
      - metahkg-server
      - metahkg-links
      - metahkg-images
      - metahkg-rlp-proxy
      - metahkg-protonvpn
    network_mode: service:metahkg-protonvpn
  metahkg-server:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-server
    image: registry.gitlab.com/metahkg/metahkg-server/${branch:-master}:${version:-latest}
    build:
      context: ../metahkg-server
      dockerfile: ./Dockerfile
      args:
        env: ${env}
    tty: true
    restart: always
    environment:
      DB_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@localhost:${MONGO_PORT}
      LINKS_DOMAIN: ${LINKS_DOMAIN}
      mailgun_key: ${mailgun_key}
      mailgun_domain: ${mailgun_domain}
      domain: ${domain}
      PORT: 3001
      recaptchasecret: ${recaptchasecret}
      jwtKey: ${jwtKey}
      cors: ${cors}
      env: ${env}
      register: ${register}
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      GCM_API_KEY: ${GCM_API_KEY}
    volumes:
      - ./images:/home/user/images
      - ../metahkg-server/src:/home/user/src
    depends_on:
      - metahkg-mongo
      - metahkg-protonvpn
    network_mode: service:metahkg-protonvpn
  metahkg-links:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-links
    image: registry.gitlab.com/metahkg/metahkg-links/${branch:-master}:${version:-latest}
    build:
      context: ../metahkg-links
      dockerfile: ./Dockerfile
    tty: true
    restart: always
    environment:
      PORT: 3003
      DB_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@localhost:${MONGO_PORT}
      metahkgDomain: ${domain}
    depends_on:
      - metahkg-mongo
      - metahkg-protonvpn
    network_mode: service:metahkg-protonvpn
  metahkg-images:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-images
    image: ghcr.io/willnorris/imageproxy:latest
    tty: true
    restart: always
    entrypoint: "/app/imageproxy -addr 0.0.0.0:3004 -cache /tmp/imageproxy"
    volumes:
      - ./imageproxy:/tmp/imageproxy
    depends_on:
      - metahkg-protonvpn
    network_mode: service:metahkg-protonvpn
  metahkg-rlp-proxy:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-rlp-proxy
    image: registry.gitlab.com/metahkg/rlp-proxy-rewrite/${branch:-master}:${version:-latest}
    build:
      context: ../rlp-proxy-rewrite
      dockerfile: ./Dockerfile
    tty: true
    restart: always
    environment:
      DB_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@localhost:${MONGO_PORT}
      PORT: 3005
    depends_on:
      - metahkg-mongo
      - metahkg-protonvpn
    network_mode: service:metahkg-protonvpn
  metahkg-mongo:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-mongo
    image: mongo:latest
    tty: true
    command: mongod --auth --port=${MONGO_PORT} --bind_ip_all
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: metahkg
    volumes:
      - ./data:/data/db
      - ../mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    depends_on:
      - metahkg-protonvpn
    network_mode: service:metahkg-protonvpn
  metahkg-protonvpn:
    container_name: metahkg${COMPOSE_PROJECT_NAME}-protonvpn
    environment:
      # Credentials
      PROTONVPN_USERNAME: ${PROTONVPN_USERNAME}
      PROTONVPN_PASSWORD: ${PROTONVPN_PASSWORD}
      # Override these where applicable
      PROTONVPN_SERVER: ${PROTONVPN_SERVER:-JP}
      PROTONVPN_TIER: ${PROTONVPN_TIER:-0}
    # Always use semver tags, avoid using tag latest!
    image: ghcr.io/tprasadtp/protonvpn:latest
    restart: always
    ports:
      - ${PORT:-$port}:80
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
      - internet
      - proxy
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
networks:
  internet:
  proxy:
    internal: true
